name: Common Jobs

on:
  workflow_call:
    secrets:
      postgres_username:
        required: true


      postgres_password:
        required: true
    inputs:
      is_release:
        required: true
        type: boolean
        default: false
    outputs:
      is_success:
        description: 'Indicates if the jobs were successful'
        value: ${{ jobs.test.result }}


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: prisma generate
        run: npx prisma generate

      - name: Build the project
        run: npm run build

  lint:
    if: inputs.is_release == false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build the project
        run: npm run lint

  test:
    env:
      DATABASE_URL: postgres://${{ secrets.postgres_username }}:${{ secrets.postgres_password }}@localhost:5432/shop-product-docker
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: ${{ secrets.postgres_username }}
          POSTGRES_PASSWORD: ${{ secrets.postgres_password }}
          POSTGRES_DB: shop-product-docker
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    

    needs:
      - build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
        
      - name: prisma generate
        run: npx prisma

      - name: prisma migrate deploy
        run: npm run db:migrate

      - name: Run tests
        run: npm test

      - name: Run test coverage
        run: npm run test:cov

      - name: Upload coverage to Codecov
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage
